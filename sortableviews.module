<?php
// $Id$
/**
 * @file
 * Sortable Views is a style plugin for Views.
 * This module makes it possible to create views and sort items using
 * drag and drop handling.
 */

/**
 * Display help and module information 
 *
 * @param @path
 *   Which path of the site we're displaying help.
 * @param arg
 *   Array that holds the current path as would be returned from arg() function.
 * @return
 *   Help text for the path.
 */
function sortableviews_help($path, $arg) {
  $output = '';
  switch ($path) {
    case "admin/help#sortableviews":
      $output = '<p>'. t("This module makes it possible to sort the order of a view using drag and drop handling.") .'</p>';
      break;
  }
  return $output;
}

/**
 * Temporarily add js and css file(s) in the beginning of the module. Later place them contextual.
 */
/**
 * Implementing hook_init
 */
function sortableviews_init() {
    // This only works in a function. Later I should call it only on the page where I need it.
    jquery_ui_add('ui.sortable');  // For a single file


}

/**
 * Implementing hook_nodeapi
 */
function sortableviews_views_api() {
    return array(
        'api' => 2,
        'path' => drupal_get_path('module', 'sortableviews') .'/views',
    );
}

/**
 * Implementing hook_nodeapi
 */
function sortableviews_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  // Remove nodes from the structure if they are deleted.
  if ($op == 'delete') {
    db_query('DELETE FROM {sortablegrid} WHERE nid = %d', $node->nid);
    db_query('DELETE FROM {sortablelist} WHERE nid = %d', $node->nid);
    db_query('DELETE FROM {sortabletable} WHERE nid = %d', $node->nid);
  }
}

/**
 * Implementation of hook_perm()
 */
function sortableviews_perm() {
    return array('sort views');
}

/**
 * Implementing hook_menu
 */
function sortableviews_menu() {
  $items = array();
  $items['sortableviews/%'] = array(
    'title' => 'Sortable views ajax call',
    'description' => 'Ajax callback for sortable views',
    'page callback' => 'sortableviews_ajax_call',
//    'page arguments' => array('draggableviews_admin'),
    'access arguments' => array('sort views'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Callback to handle post requests from sortable views
 */
function sortableviews_ajax_call($style_type) {

    switch ($style_type){
        case "grid":
            print 'grid';
            break;
        case "list":
            return t('Testing callbacks');
            break;
        case "table":
            print "table";
            break;
    }
    
}